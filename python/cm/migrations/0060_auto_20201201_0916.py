# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by Django 3.1.2 on 2020-12-01 09:16
# pylint: disable=line-too-long

import cm.models
from django.db import migrations, models
import django.db.models.deletion


def create_component_prototype(apps, schema_editor):
    Prototype = apps.get_model('cm', 'Prototype')
    Component = apps.get_model('cm', 'Component')
    for comp in Component.objects.all():
        proto = Prototype(
            bundle = comp.prototype.bundle,
            type = 'component',
            parent = comp.prototype,
            path = comp.prototype.path,
            name = comp.name,
            display_name = comp.display_name,
            version = comp.prototype.version,
            constraint = comp.constraint,
            requires = comp.requires,
            adcm_min_version = comp.prototype.adcm_min_version,
            monitoring = comp.monitoring,
            description = comp.description,
        )
        proto.save()
        comp.comp_prototype = proto
        comp.save()


def create_component_co(apps, schema_editor):
    ServiceComponent = apps.get_model('cm', 'ServiceComponent')
    ClusterObject = apps.get_model('cm', 'ClusterObject')
    for sc in ServiceComponent.objects.all():
        co = ClusterObject(
            cluster = sc.cluster,
            prototype = sc.component.comp_prototype,
            service = sc.service
        )
        co.save()
        sc.co_comp = co
        sc.save()


def fix_host_component(apps, schema_editor):
    HostComponent = apps.get_model('cm', 'HostComponent')
    for hc in HostComponent.objects.all():
        hc.co_comp = hc.component.co_comp
        hc.save()



class Migration(migrations.Migration):

    dependencies = [
        ('cm', '0059_auto_20200904_0910'),
    ]

    operations = [
        migrations.AddField(
            model_name='clusterobject',
            name='service',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='cm.clusterobject'),
        ),
        migrations.AddField(
            model_name='component',
            name='comp_prototype',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='cm.prototype'),
        ),
        migrations.AddField(
            model_name='hostcomponent',
            name='co_comp',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comp', to='cm.clusterobject'),
        ),
        migrations.AddField(
            model_name='prototype',
            name='constraint',
            field=cm.models.JSONField(default=[0, '+']),
        ),
        migrations.AddField(
            model_name='prototype',
            name='parent',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='cm.prototype'),
        ),
        migrations.AddField(
            model_name='prototype',
            name='requires',
            field=cm.models.JSONField(default=[]),
        ),
        migrations.AddField(
            model_name='servicecomponent',
            name='co_comp',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hc', to='cm.clusterobject'),
        ),
        migrations.AlterField(
            model_name='prototype',
            name='type',
            field=models.CharField(choices=[('adcm', 'adcm'), ('service', 'service'), ('component', 'component'), ('cluster', 'cluster'), ('host', 'host'), ('provider', 'provider')], max_length=16),
        ),
        migrations.AlterField(
            model_name='stageprototype',
            name='type',
            field=models.CharField(choices=[('adcm', 'adcm'), ('service', 'service'), ('component', 'component'), ('cluster', 'cluster'), ('host', 'host'), ('provider', 'provider')], max_length=16),
        ),
        migrations.AlterUniqueTogether(
            name='prototype',
            unique_together={('bundle', 'type', 'parent', 'name', 'version')},
        ),
        migrations.RunPython(create_component_prototype),
        migrations.RunPython(create_component_co),
        migrations.RunPython(fix_host_component),
    ]
