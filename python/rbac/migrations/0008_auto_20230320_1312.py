# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by Django 3.2.18 on 2023-03-20 13:12

import hashlib

from django.conf import settings
from django.db import migrations


def fix_permission_for_run_action(apps, schema_editor) -> None:
    permission_model = apps.get_model("auth", "permission")
    action_model = apps.get_model("cm", "action")
    permission_ids_for_delete = []

    for permission in permission_model.objects.filter(codename__contains="run_action"):
        if permission.role_set.count():
            role = permission.role_set.first()
            action_id = role.init_params["action_id"]
            action = action_model.objects.get(id=action_id)
            action_name_hash = hashlib.sha256(action.name.encode(settings.ENCODING_UTF_8)).hexdigest()
            permission.codename = f"run_action_{action_name_hash}"
            permission.name = f"Can run {action_name_hash} actions"
            permission.save(update_fields=["codename", "name"])
        else:
            permission_ids_for_delete.append(permission.id)

    permission_model.objects.filter(id__in=permission_ids_for_delete).delete()


def revert_permission_for_run_action(apps, schema_editor) -> None:
    ...


class Migration(migrations.Migration):
    dependencies = [
        ("rbac", "0007_auto_20230124_0849"),
    ]

    operations = [
        migrations.RunPython(code=fix_permission_for_run_action, reverse_code=revert_permission_for_run_action)
    ]
