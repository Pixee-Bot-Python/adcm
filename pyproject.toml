[tool.poetry]
name = "adcm"
version = "2.0.0"
description = "Arenadata Cluster Manager"
authors = [""]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"

ansible = { git = "https://github.com/arenadata/ansible.git", branch = "v2.8.8-p6" }
apache-libcloud = "^3.7.0"
attr = "0.3.2"
casestyle = "^0.0.4"
coreapi = "^2.3.3"
cryptography = "^41.0.1"
Django = "^3.2"
django-auth-ldap = "^4.3.0"
django-csp = "^3.7"
django-filter = "^23.2"
django-guardian = "^2.4.0"
djangorestframework = "^3.14.0"
drf-extensions = "^0.7.1"
drf-flex-fields = "^1.0.2"
drf-nested-routers = "*"
googleapis-common-protos = "^1.59.1"
grpcio = "^1.56.0"
jinja2 = "2.11.3"
jmespath = "^1.0.1"
jsonschema = "^4.17.3"
lxml = "^4.9.2"
markupsafe = "1.1.1"
multipledispatch = "^1.0.0"
psycopg2-binary = "^2.9.6"
pycryptodome = "3.18.0"
pydantic = "^1.10.9"
python-gnupg = "^0.5.0"
requests-toolbelt = "^1.0.0"
rstr = "^3.2.1"
ruyaml = "^0.91.0"
social-auth-app-django = "^5.2.0"
uwsgi = "^2.0.22"
six = "^1.16.0"
django-cors-headers = "^4.1.0"
djangorestframework-camel-case = "^1.4.2"
adcm-version = "^1.0.0"
drf-spectacular = {version = "^0.27.0", extras = ["sidecar"]}
django-test-migrations = {version = "^1.3.0", python = "3.10"}

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.13"

[tool.poetry.group.unittests]
optional = true

[tool.poetry.group.unittests.dependencies]
tblib = "^2.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.0"

[tool.poetry.group.profiling]
optional = true

[tool.poetry.group.profiling.dependencies]
django-silk = "^5.0.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
exclude = ["python/cm/migrations/*", "python/audit/migrations/*", "python/rbac/migrations/*"]

[tool.ruff.format]
exclude = ["python/cm/migrations/*", "python/audit/migrations/*", "python/rbac/migrations/*"]

[tool.ruff.lint.isort]
force-sort-within-sections = true
length-sort-straight = true
order-by-type = true

[tool.ruff.lint]
ignore = [
    "E402",
    "SIM117",
    "A003",
    "ANN001", "ANN201","ANN101", "ANN102", "ANN401", "ANN002", "ANN003", "ANN202", "ANN204", "ANN205", "ANN206",
    "COM812",
    "ARG005",
    "S105",
    "TRY003", "TRY201", "TRY301", "TRY300",
    "S106",
    "RET503", "RET505",
    "FBT001", "FBT002", "FBT003",
    "PIE800",
    "PTH103", "PTH107", "PTH110", "PTH112", "PTH118", "PTH119", "PTH120","PTH123",
    "S107"
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E", "W",
    # isort
    "I",
    # "COM" - The following rules may cause conflicts when used with the formatter: `COM812`.
    # To avoid unexpected behavior, we recommend disabling these rules
    "N", "UP", "YTT", "ANN",
    "S", "BLE", "FBT", "B", "COM", "A", "C4",
    "DTZ", "ICN", "PIE", "Q", "RET",
    "SIM", "ARG", "PTH", "PLE", "TRY"
]
