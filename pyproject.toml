[tool.poetry]
name = "adcm"
version = "0.1.0"
description = "ArenaData Cluster Manager"
authors = [""]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"

ansible = { git = "https://github.com/arenadata/ansible.git", branch = "v2.8.8-p6" }
apache-libcloud = "*"
attr = "*"
casestyle = "*"
coreapi = "*"
cryptography = "*"
Django = "^3.2"
django-auth-ldap = "*"
django-csp = "*"
django-filter = "*"
django-guardian = "*"
djangorestframework = "*"
drf-extensions = "*"
drf-flex-fields = "*"
drf-nested-routers = "*"
googleapis-common-protos = "*"
grpcio = "*"
jinja2 = "2.11.3"
jmespath = "*"
jsonschema = "*"
lxml = "*"
markupsafe = "1.1.1"
multipledispatch = "*"
psycopg2-binary = "*"
pycryptodome = "*"
pydantic = "*"
python-gnupg = "*"
requests-toolbelt = "*"
rstr = "*"
ruyaml = "*"
social-auth-app-django = "*"
uwsgi = "*"
version-utils = "*"
six = "*"
django-cors-headers = "*"
djangorestframework-camel-case = "^1.4.2"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
autoflake = "*"
black = "*"
flake8 = "*"
isort = "*"
pylint = "*"

[tool.poetry.group.unittests]
optional = true

[tool.poetry.group.unittests.dependencies]
tblib = "^2.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
skip_glob = ["python/ansible/plugins"]
skip = ["python/init_db.py", "python/task_runner.py", "python/backupdb.py", "python/job_runner.py",
    "python/drf_docs.py"]

[tool.pylint.master]
ignore = ["migrations"]
enable = ["useless-suppression"]
fail-on = ["useless-suppression"]

[tool.pylint."messages control"]
disable = ["missing-docstring", "missing-timeout", "no-else-return", "no-member", "too-few-public-methods",
    "too-many-arguments"]
good-names = ["db", "e", "f", "i", "pk"]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.similarities]
min-similarity-lines = 30
