- type: cluster
  version: &version 2.0
  name: multistate_cluster_change
  upgrade:
    - name: switch_bundle_upgrade
      versions:
        min: 0.1
        max: 1.3
      scripts:
        - name: before_switch_job
          script: ./actions.yaml
          script_type: ansible
        - name: switch job
          script: bundle_switch
          script_type: internal
        - name: after_switch_job
          script: ./actions.yaml
          script_type: ansible
      states:
        available: any
        on_success: upgrading

  config: &config
    - name: string
      type: string
      required: true
      default: "string"
  actions:
    revert_upgrade:
      type: job
      script: bundle_revert
      script_type: internal
      masking:
      on_fail:
        state: reverting_fail
        multi_state:
          set:
            - "changed_fail"
          unset:
            - "multi_fail_on_last"
      on_success:
        state: reverting
        multi_state:
          set:
            - "changed_success"
          unset:
            - "multi_fail_on_last"
    success_upgrade:
      type: job
      script: ./actions.yaml
      script_type: ansible
      states:
        available:
          - upgrading
        on_success: upgraded
    set_multistate:
      type: job
      script_type: ansible
      script: set_multistate.yaml
      params:
        ansible_tags: cluster
      masking:

    state_changing_fail:
      type: task
      allow_to_terminate: true
      masking:
      scripts:
        - script_type: ansible
          script: ok.yaml
          name: "first_step"
          on_fail: failed1

        - script_type: ansible
          script: fail.yaml
          name: "second_step"
          on_fail:
            state: not_multi_state
            multi_state:
              set:
                - "multi_fail_on_last"
              unset:
                - "unset_this"

    state_changing_success:
      type: task
      allow_to_terminate: true
      scripts:
        - script_type: ansible
          script: ok.yaml
          name: "first_step"
          on_fail: failed1

        - script_type: ansible
          script: ok.yaml
          name: "second_step"
          on_fail: failed2

      masking:
      on_fail:
        multi_state:
          set:
            - "multi_fail"
          unset:
            - "unset_this"
      on_success:
        state: multi_ok
        multi_state:
          set:
            - "multi_ok"
          unset:
            - "unset_this"

- type: service
  version: *version
  name: service1
  config: *config
  actions:
    set_multistate:
      type: job
      script_type: ansible
      script: set_multistate.yaml
      params:
        ansible_tags: service
      masking:
    state_changing_fail:
      type: task
      allow_to_terminate: true
      masking:
      scripts:
        - script_type: ansible
          script: ok.yaml
          name: "first_step"
          on_fail: failed1
        - script_type: ansible
          script: fail.yaml
          name: "second_step"
          on_fail:
            state: not_multi_state
            multi_state:
              set:
                - "multi_fail_on_last"
              unset:
                - "unset_this"
    state_changing_success:
      type: task
      allow_to_terminate: true
      scripts:
        - script_type: ansible
          script: ok.yaml
          name: "first_step"
          on_fail: failed1
        - script_type: ansible
          script: ok.yaml
          name: "second_step"
          on_fail: failed2
      masking:
      on_fail:
        multi_state:
          set:
            - "multi_fail"
          unset:
            - "unset_this"
      on_success:
        state: multi_ok
        multi_state:
          set:
            - "multi_ok"
          unset:
            - "unset_this"

  components:
    component11:
      config: *config
      actions:
        set_multistate:
          type: job
          script_type: ansible
          script: set_multistate.yaml
          params:
            ansible_tags: service
          masking:

        state_changing_fail:
          type: task
          allow_to_terminate: true
          masking:
          scripts:
            - script_type: ansible
              script: ok.yaml
              name: "first_step"
              on_fail: failed1

            - script_type: ansible
              script: fail.yaml
              name: "second_step"
              on_fail:
                state: not_multi_state
                multi_state:
                  set:
                    - "multi_fail_on_last"
                  unset:
                    - "unset_this"

        state_changing_success:
          type: task
          allow_to_terminate: true
          scripts:
            - script_type: ansible
              script: ok.yaml
              name: "first_step"
              on_fail: failed1

            - script_type: ansible
              script: ok.yaml
              name: "second_step"
              on_fail: failed2

          masking:
          on_fail:
            multi_state:
              set:
                - "multi_fail"
              unset:
                - "unset_this"
          on_success:
            state: multi_ok
            multi_state:
              set:
                - "multi_ok"
              unset:
                - "unset_this"

- type: service
  version: *version
  name: service_from_update

  components:
    component_from_update:
