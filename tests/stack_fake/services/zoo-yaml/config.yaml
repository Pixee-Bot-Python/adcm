# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Simple_service
type: service
description: YAMLKeeper
version: 'new_version'

actions:
    install:
        commands:
        - {command: INSTALL, component: ALLKEEPER_CLIENT}
        type: task
        script: cook.py
        script_type: task_generator
    start:
        type: job
        config:
            folder: stacks/ADH/1.0/services/
            packages: [simpleservice]
            script: scripts/zookeeper_server.py
        log_files: [remote]
        script: services/zoo/start.yaml
        script_type: ansible
    stop:
        type: job
        log_files: [remote]
        script: services/zoo/stop.yaml
        script_type: ansible

components:
    ZOOKEEPER_CLIENT:
        commands:
            CONFIG: {playbook: qwe.yaml, type: ansible}
            INSTALL:
                log_files: [remote]
                script: run_agent_command.yaml
                script_type: ansible
        config:
            folder: stacks/services/ALLKEEPER/package
            packages: [allkeeper]
            script: scripts/allkeeper_client.py
        hostgroup: ALLKEEPER.ALLKEEPER_SERVER

config:
    ssh-key: {default: TItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAA, type: string, required: 0}
    integer-key: {default: 24, max: 48, min: 2, type: integer, required: 0}
    float-key: {default: 2.4, type: float, required: 0}
    zoo.cfg:
        autopurge.purgeInterval: {default: 24, max: 48, min: 2, type: integer}
        dataDir: {default: /hadoop/zookeeper, type: string}
        port:
            required: 0
            default: http
            option: {http: 80, https: 443}
            type: option
    required-key: {default: value, type: string}
