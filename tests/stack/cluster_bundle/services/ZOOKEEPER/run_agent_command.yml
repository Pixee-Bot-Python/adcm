---
- name: run remote ambari-agent command
  become: True

  vars:
    agent_dir: "/var/lib/ambari-agent"
    remote_command: "/var/lib/ambari-agent/command.py"

  hosts: "{{job.hostgroup}}"
  gather_facts: no

  tasks:

  - name: check ambari agent
    shell: "yum list installed |grep ambari-agent |awk '{print $1}'"
    args:
      warn: false
    register: ambari

  - name: setup host
    include_tasks: "{{env.stack_dir}}/common/setup_host.yml"
    when: ambari.stdout != 'ambari-agent.x86_64'

  - name: print job descriptions
    debug: msg="run ambari-agent command {{job.command}}, service {{job.service}}, component {{job.component}} on {{job.hostgroup}}"

  - name: copy command runner
    copy:
      src:  "{{env.stack_dir}}/common/command.py"
      dest: "{{remote_command}}"
      mode: 0755

  - name: template ambari-agent json command config
    shell: "{{env.stack_dir}}/common/template.py {{env.stack_dir}}/common/command.json {{env.run_dir}}/{{job.id}}-agent-command.json {{env.run_dir}}/{{job.id}}-config.json"
    become: False
    delegate_to: localhost

  - name: copy ambari-agent command config
    copy:
      src: "{{env.run_dir}}/{{job.id}}-agent-command.json"
      dest: "{{agent_dir}}/data/command-{{job.id}}.json"
      mode: 0755

  - name: run ambari-agent command
    command: "{{remote_command}} {{job.component_config.folder}} {{job.component_config.script}} {{job.command}} {{job.id}}"
    register: ambari_res
    ignore_errors: yes

  - name: fetch out log
    fetch:
      src: "{{agent_dir}}/data/{{job.id}}-out.txt"
      dest: "{{env.log_dir}}/{{job.id}}-remote-{{inventory_hostname}}-out.txt"
      flat: yes
      mode: 0644

  - name: fetch error log
    fetch:
      src: "{{agent_dir}}/data/{{job.id}}-err.txt"
      dest: "{{env.log_dir}}/{{job.id}}-remote-{{inventory_hostname}}-err.txt"
      flat: yes
      mode: 0644

  - name: raise amabri-agent error
    fail:
        msg: "ambari-agent remote error {{ambari_res.rc}}"
    when: ambari_res.rc != 0
